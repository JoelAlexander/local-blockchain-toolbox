server {
  listen 443 http2 ssl;
  listen [::]:443 http2 ssl;

  server_name blockchain.{{DOMAIN}};

  ssl_certificate /etc/ssl/certs/{{DOMAIN}}/fullchain.pem;
  ssl_certificate_key /etc/ssl/certs/{{DOMAIN}}/privkey.pem;

  location / {
    proxy_pass http://rpcnode:8545;

    # CORS headers
    if ($http_origin ~* (https://{{DOMAIN}})) {
        add_header 'Access-Control-Allow-Origin' "$http_origin";
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type';
        add_header 'Access-Control-Allow-Credentials' 'true';
    }
  }
}

server {
  listen 443 http2 ssl;
  listen [::]:443 http2 ssl;

  server_name {{DOMAIN}};

  ssl_certificate /etc/ssl/certs/{{DOMAIN}}/fullchain.pem;
  ssl_certificate_key /etc/ssl/certs/{{DOMAIN}}/privkey.pem;

  gzip on;
  gzip_vary on;
  gzip_min_length 10240;
  gzip_proxied expired no-cache no-store private auth;
  gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml text/html;
  gzip_disable "MSIE [1-6]\.";

  location / {
    root /var/www;
    index index.html;
    try_files $uri $uri/ /index.html;
    expires 12h;
    add_header Cache-Control "public, no-transform";
  }
}

server {
  listen 80;
  listen [::]:80;

  location / {
    return 301 https://$host$request_uri;
  }
}
